<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<bean id="target" class="spring.aop.entity.NewlecExam" p:kor="1" p:eng="1" p:math="1" p:com="1"/>
	
	<bean id="logAroundAdvice" class="spring.aop.advice.LogAroundAdvice"/>
	<bean id="logBeforeAdvice" class="spring.aop.advice.LogBeforeAdvice"/>
	<bean id="logAfterReturningAdvice" class="spring.aop.advice.logAfterReturningAdvice"/>
	<bean id="logAfterThrowingAdvice" class="spring.aop.advice.LogAfterThrowingAdvice"/>
	
	<!-- <bean id="classicPointCut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="total"/> 위빙 가능한 함수를 total 을 사용하겠다. pointcut으로 사용하겠다.
	</bean>
	
	<bean id="classicBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"/>
		<property name="pointcut" ref="classicPointCut"/>
	</bean> -->
	<!-- 기존의 방식은 포인트컷과 어드바이스를 모두 참조객체를 만들어 어드바이스별, 어드바이저를 만들어 줘야 했지만,
	NameMatchMethodPointcutAdvisor 클래스를 이용하면 간소화 하여 하나의 객체 안에 지정을 해 줄 수 있다. -->
	
	<!-- <bean id="classicBeforeAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"/>
		<property name="mappedNames"> s를 붙여 복수의 value를 지정할 수도있다.
			<list>
				<value>total</value>
				<value>avg</value>
			</list>
		</property>
	</bean> -->
	
	<bean id="classicBeforeAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"/>
		<property name="patterns"> <!-- s를 붙여 복수의 value를 지정할 수도있다. -->
			<list>
				<value>.*to.*</value> <!-- 메소드 이름중에 to가들어간 것을 찾는다. -->
				<value>avg</value>
			</list>
		</property>
	</bean>
	
	<bean id="classicAroundAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logAroundAdvice"/>
		<property name="mappedName" value="total"/>
	</bean>
	
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="target" />
		<property name="interceptorNames"><!-- 핸들러 -->
			<list> <!-- 참조객체를 넣어준다 --> <!-- 어드바이스 벼로 포인트컷의 함수를 사용할 수 있다. -->
				<value>classicAroundAdvisor</value>
				<value>classicBeforeAdvisor</value><!-- pointcut을 적용한 객체 -->
				<value>logAfterReturningAdvice</value>
				<value>logAfterThrowingAdvice</value>
			</list>
		</property>
	</bean>

</beans>
